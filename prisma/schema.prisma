// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String     @id @default(uuid())
  username         String     @unique
  password         String
  role             Role       @default(USER)
  createdAt        DateTime   @default(now())
  vouchers         Voucher[]  @relation("createdBy")
  redeemedVouchers Voucher[]  @relation("redeemedBy")
  editedVouchers   Voucher[]  @relation("editedBy")
  UsageLog         UsageLog[]

  @@map("users")
}

enum Role {
  ADMIN
  USER
  VENDOR
}

model Voucher {
  id         String        @id @default(uuid())
  code       String        @unique
  value      Int // duration in minutes or megabytes, depending on system
  type       VoucherType   @default(TIME)
  status     VoucherStatus @default(ACTIVE)
  isRevoked  Boolean       @default(false)
  isRedeemed Boolean       @default(false)
  redeemedAt DateTime? // when it was redeemed

  redeemedBy   User?   @relation("redeemedBy", fields: [redeemedById], references: [id])
  redeemedById String?

  createdBy   User?   @relation("createdBy", fields: [createdById], references: [id])
  createdById String?

  updatedBy   User?     @relation("editedBy", fields: [updatedById], references: [id])
  updatedById String?
  createdAt   DateTime  @default(now())
  expiresAt   DateTime?
  note        String?

  usageLogs UsageLog[]

  @@map("vouchers")
}

enum VoucherStatus {
  ACTIVE
  REDEEMED
  EXPIRED
  REVOKED
}

enum VoucherType {
  TIME
  DATA
  UNLIMITED
}

model UsageLog {
  id        String   @id @default(uuid())
  userId    String
  voucherId String
  message   String
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  voucher   Voucher  @relation(fields: [voucherId], references: [id])

  @@map("usage_logs")
}
